var O=Object.defineProperty;var N=(p,t,e)=>t in p?O(p,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):p[t]=e;var f=(p,t,e)=>N(p,typeof t!="symbol"?t+"":t,e);import{u as A}from"./stores-BYixwwI5.js";import{r as U,s as z}from"./vue-vendor-DBH4gaed.js";import{f as D,s as k,a as F,e as J}from"./ui-vendor-D2Zhk6Dz.js";import{c as q}from"./supabase-vendor-CEZ1HC2p.js";const x="https://jgqxknwrcxxhwylnrpfr.supabase.co",L="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpncXhrbndyY3h4aHd5bG5ycGZyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc5NzI1MTcsImV4cCI6MjA2MzU0ODUxN30.uRz08HtNPGD57dHNBSVAL7Txq4_O4JzJvlU7q7UVLjg",G="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImpncXhrbndyY3h4aHd5bG5ycGZyIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc0Nzk3MjUxNywiZXhwIjoyMDYzNTQ4NTE3fQ.-ccBam8qyHYUeJ4RpwYKtsWEtMPv_xG5IdYlwRuBCTc",y=q(x,L,{auth:{autoRefreshToken:!0,persistSession:!0,detectSessionInUrl:!0,flowType:"pkce"},realtime:{params:{eventsPerSecond:10}},global:{headers:{"X-Client-Info":"petsmart-admin"}}}),s=q(x,G,{auth:{autoRefreshToken:!1,persistSession:!1},global:{headers:{"X-Client-Info":"petsmart-admin-service"}}}),_=class _{constructor(){f(this,"isMonitoring",!1);f(this,"healthCheckInterval",null);f(this,"reconnectAttempts",0);f(this,"maxReconnectAttempts",3);f(this,"lastActivity",Date.now());f(this,"visibilityChangeHandler",null);f(this,"focusHandler",null);f(this,"blurHandler",null);f(this,"isConnected",U(!0));f(this,"isReconnecting",U(!1));f(this,"lastHealthCheck",U(null))}static getInstance(){return _.instance||(_.instance=new _),_.instance}startMonitoring(){this.isMonitoring||(console.log("🔍 Starting connection monitoring..."),this.isMonitoring=!0,this.setupEventListeners(),this.startHealthChecks())}stopMonitoring(){console.log("🛑 Stopping connection monitoring..."),this.isMonitoring=!1,this.cleanup()}setupEventListeners(){this.visibilityChangeHandler=()=>{document.visibilityState==="visible"?(console.log("👁️ Tab became visible, checking connection..."),this.handleTabVisible()):(console.log("🙈 Tab became hidden"),this.handleTabHidden())},this.focusHandler=()=>{console.log("🎯 Window focused, refreshing connection..."),this.handleWindowFocus()},this.blurHandler=()=>{console.log("😴 Window blurred"),this.lastActivity=Date.now()},document.addEventListener("visibilitychange",this.visibilityChangeHandler),window.addEventListener("focus",this.focusHandler),window.addEventListener("blur",this.blurHandler);const t=["mousedown","mousemove","keypress","scroll","touchstart"],e=()=>{this.lastActivity=Date.now()};t.forEach(r=>{document.addEventListener(r,e,{passive:!0})})}startHealthChecks(){this.performHealthCheck(),this.healthCheckInterval=window.setInterval(()=>{this.performHealthCheck()},3e4)}async performHealthCheck(){try{console.log("🏥 Performing health check...");const{data:t,error:e}=await s.from("admin_users").select("id").limit(1);if(e)throw new Error(`Health check failed: ${e.message}`);const r=A();if(r.isAuthenticated&&!r.hasValidSession)throw new Error("Session expired");this.isConnected.value=!0,this.lastHealthCheck.value=new Date,this.reconnectAttempts=0,console.log("✅ Health check passed")}catch(t){console.error("❌ Health check failed:",t),this.isConnected.value=!1,await this.handleConnectionFailure()}}async handleTabVisible(){Date.now()-this.lastActivity>5*60*1e3?(console.log("⏰ Tab was hidden for extended period, forcing reconnection..."),await this.forceReconnection()):await this.performHealthCheck()}handleTabHidden(){this.lastActivity=Date.now()}async handleWindowFocus(){await this.performHealthCheck();try{const t=A();if(t.isAuthenticated){const{data:{session:e},error:r}=await y.auth.getSession();(r||!e)&&(console.log("🔄 Session invalid, reinitializing auth..."),await t.initialize())}}catch(t){console.error("Error refreshing session on focus:",t)}}async handleConnectionFailure(){if(this.reconnectAttempts>=this.maxReconnectAttempts){console.error("🚨 Max reconnection attempts reached");return}this.isReconnecting.value=!0,this.reconnectAttempts++,console.log(`🔄 Attempting reconnection (${this.reconnectAttempts}/${this.maxReconnectAttempts})...`);try{await this.forceReconnection()}catch(t){console.error("Reconnection failed:",t)}finally{this.isReconnecting.value=!1}}async forceReconnection(){console.log("🔄 Forcing reconnection...");try{const t=A();t.isAuthenticated&&await t.initialize(),await this.performHealthCheck(),await z(),console.log("✅ Reconnection successful")}catch(t){throw console.error("❌ Reconnection failed:",t),t}}cleanup(){this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),this.visibilityChangeHandler&&(document.removeEventListener("visibilitychange",this.visibilityChangeHandler),this.visibilityChangeHandler=null),this.focusHandler&&(window.removeEventListener("focus",this.focusHandler),this.focusHandler=null),this.blurHandler&&(window.removeEventListener("blur",this.blurHandler),this.blurHandler=null)}async reconnect(){console.log("🔄 Manual reconnection triggered..."),this.reconnectAttempts=0,await this.forceReconnection()}getStatus(){return{isConnected:this.isConnected.value,isReconnecting:this.isReconnecting.value,lastHealthCheck:this.lastHealthCheck.value,reconnectAttempts:this.reconnectAttempts}}};f(_,"instance");let M=_;const K=M.getInstance();class Y{static async getDashboardMetrics(){var t,e;try{const[r,a,o,n]=await Promise.all([s.from("profiles").select("id",{count:"exact",head:!0}),s.from("pets").select("id",{count:"exact",head:!0}),s.from("orders").select("id",{count:"exact",head:!0}),s.from("orders").select("total_amount")]),i=D(k(new Date,30),"yyyy-MM-dd"),[c,l,d,u]=await Promise.all([s.from("profiles").select("id",{count:"exact",head:!0}).lt("created_at",i),s.from("pets").select("id",{count:"exact",head:!0}).lt("created_at",i),s.from("orders").select("id",{count:"exact",head:!0}).lt("created_at",i),s.from("orders").select("total_amount").lt("created_at",i)]),m=r.count||0,h=a.count||0,g=o.count||0,S=((t=n.data)==null?void 0:t.reduce((E,$)=>E+($.total_amount||0),0))||0,b=c.count||0,R=l.count||0,P=d.count||0,v=((e=u.data)==null?void 0:e.reduce((E,$)=>E+($.total_amount||0),0))||0,I=b>0?(m-b)/b*100:0,T=R>0?(h-R)/R*100:0,C=P>0?(g-P)/P*100:0,w=v>0?(S-v)/v*100:0;return{totalUsers:m,totalPets:h,totalOrders:g,totalRevenue:S,usersTrend:Math.round(I*10)/10,petsTrend:Math.round(T*10)/10,ordersTrend:Math.round(C*10)/10,revenueTrend:Math.round(w*10)/10}}catch(r){return console.error("Error fetching dashboard metrics:",r),{totalUsers:0,totalPets:0,totalOrders:0,totalRevenue:0,usersTrend:0,petsTrend:0,ordersTrend:0,revenueTrend:0}}}static async getPerformanceChartData(t=7){try{const e=[],r=[];for(let a=t-1;a>=0;a--){const o=k(new Date,a);e.push(D(o,"MMM dd"))}for(let a=t-1;a>=0;a--){const o=k(new Date,a),n=F(o),i=J(o),{data:c}=await s.from("orders").select("total_amount").gte("created_at",n.toISOString()).lte("created_at",i.toISOString()),l=(c==null?void 0:c.reduce((d,u)=>d+(u.total_amount||0),0))||0;r.push(l/1e3)}return{labels:e,datasets:[{label:"Revenue",data:r,borderColor:"#6366F1",backgroundColor:"rgba(99, 102, 241, 0.1)"}]}}catch(e){return console.error("Error fetching performance chart data:",e),{labels:Array.from({length:t},(a,o)=>D(k(new Date,t-1-o),"MMM dd")),datasets:[{label:"Revenue",data:Array.from({length:t},()=>Math.random()*10),borderColor:"#6366F1",backgroundColor:"rgba(99, 102, 241, 0.1)"}]}}}static async getRecentActivities(t=10){try{const{data:e}=await s.from("orders").select(`
          id,
          total_amount,
          status,
          created_at,
          profiles:user_id (
            first_name,
            last_name,
            username,
            profile_pic
          )
        `).order("created_at",{ascending:!1}).limit(t);return(e==null?void 0:e.map(a=>{var o,n,i,c,l,d;return{id:a.id,title:`${((o=a.profiles)==null?void 0:o.first_name)||((n=a.profiles)==null?void 0:n.username)||"User"} placed an order`,description:`Order #${a.id.slice(-8)} - $${a.total_amount}`,type:a.status==="completed"?"success":"info",timestamp:new Date(a.created_at),user:{name:`${((i=a.profiles)==null?void 0:i.first_name)||""} ${((c=a.profiles)==null?void 0:c.last_name)||""}`.trim()||((l=a.profiles)==null?void 0:l.username)||"User",avatar:((d=a.profiles)==null?void 0:d.profile_pic)||void 0},category:"Order"}}))||[]}catch(e){return console.error("Error fetching recent activities:",e),[]}}static async searchGlobal(t,e=10){var r,a,o;try{const n=`%${t}%`,[i,c,l]=await Promise.all([s.from("profiles").select("id, username, first_name, last_name, email").or(`username.ilike.${n},first_name.ilike.${n},last_name.ilike.${n},email.ilike.${n}`).limit(e),s.from("pets").select("id, name, breed, profiles:owner_id(username, first_name, last_name)").ilike("name",n).limit(e),s.from("orders").select("id, total_amount, status, profiles:user_id(username, first_name, last_name)").ilike("id",n).limit(e)]);return[...((r=i.data)==null?void 0:r.map(u=>({id:u.id,title:`${u.first_name||""} ${u.last_name||""}`.trim()||u.username||"User",subtitle:u.email,type:"user",icon:"mdi-account"})))||[],...((a=c.data)==null?void 0:a.map(u=>{var m,h;return{id:u.id,title:u.name,subtitle:`${u.breed} - Owner: ${((m=u.profiles)==null?void 0:m.first_name)||((h=u.profiles)==null?void 0:h.username)||"Unknown"}`,type:"pet",icon:"mdi-paw"}}))||[],...((o=l.data)==null?void 0:o.map(u=>({id:u.id,title:`Order #${u.id.slice(-8)}`,subtitle:`$${u.total_amount} - ${u.status}`,type:"order",icon:"mdi-shopping"})))||[]]}catch(n){return console.error("Error performing global search:",n),[]}}}const ee=Object.freeze(Object.defineProperty({__proto__:null,DashboardService:Y},Symbol.toStringTag,{value:"Module"}));class Z extends Error{constructor(t,e,r){super(t),this.code=e,this.details=r,this.name="ApiError"}}const H={maxAttempts:3,baseDelay:1e3,maxDelay:5e3};async function B(p,t,e=H.maxAttempts){let r=null;for(let a=1;a<=e;a++)try{return await p()}catch(o){if(r=o,console.warn(`${t} attempt ${a}/${e} failed:`,o.message),o.code==="PGRST301"||o.code==="PGRST116"||a===e)break;const n=Math.min(H.baseDelay*Math.pow(2,a-1),H.maxDelay);console.log(`Retrying ${t} in ${n}ms...`),await new Promise(i=>setTimeout(i,n))}throw new Z(`${t} failed after ${e} attempts: ${r==null?void 0:r.message}`,r==null?void 0:r.code,r)}class te{static async getDashboardMetrics(){return B(async()=>{const{data:t,error:e}=await y.rpc("calculate_dashboard_metrics");if(e)throw e;return{data:t,error:null}},"Dashboard metrics fetch").catch(t=>(console.error("Error fetching dashboard metrics:",t),{data:null,error:t}))}static async getUsers(t=1,e=10,r=""){try{const{data:a,error:o}=await s.from("admin_users").select("email").eq("is_active",!0),n=(a==null?void 0:a.map(h=>h.email))||[];let i=s.from("profiles").select("*",{count:"exact",head:!0}).eq("is_active",!0);r&&(i=i.or(`username.ilike.%${r}%,first_name.ilike.%${r}%,last_name.ilike.%${r}%`));const{count:c}=await i,{data:l,error:d}=await s.rpc("get_users_with_email_and_stats",{page_number:t,page_size:e,search_term:r||""});if(d){let h=s.from("profiles").select(`
            *,
            pets:pets(count),
            orders:orders(count),
            appointments:appointments(count)
          `).eq("is_active",!0).order("created_at",{ascending:!1});r&&(h=h.or(`username.ilike.%${r}%,first_name.ilike.%${r}%,last_name.ilike.%${r}%`));const{data:g,error:S}=await h.range((t-1)*e,t*e-1);if(S)throw S;const{data:b,error:R}=await s.auth.admin.listUsers();if(!R&&b){const v=new Map(b.users.map(w=>[w.id,{email:w.email}])),I=g==null?void 0:g.map(w=>{var E;return{...w,email:((E=v.get(w.id))==null?void 0:E.email)||""}}).filter(w=>!n.includes(w.email)),T=(I==null?void 0:I.length)||0,C=c?Math.max(0,c-n.length):0;return{data:I,error:null,count:C}}return{data:g==null?void 0:g.filter(v=>!0),error:null,count:c||0}}const u=l==null?void 0:l.filter(h=>!n.includes(h.email)),m=c?Math.max(0,c-n.length):0;return{data:u,error:null,count:m}}catch(a){return console.error("Error fetching users:",a),{data:null,error:a,count:0}}}static async getUserById(t){try{const{data:e,error:r}=await s.from("profiles").select(`
          *,
          pets:pets(*),
          orders:orders(*),
          appointments:appointments(*)
        `).eq("id",t).single();if(r)throw r;const{data:a,error:o}=await s.auth.admin.getUserById(t);return!o&&a?{data:{...e,email:a.user.email||""},error:null}:{data:e,error:null}}catch(e){return console.error("Error fetching user:",e),{data:null,error:e}}}static async updateUser(t,e){try{const{data:r,error:a}=await s.from("profiles").update(e).eq("id",t).select().single();if(a)throw a;return{data:r,error:null}}catch(r){return console.error("Error updating user:",r),{data:null,error:r}}}static async createUser(t){try{const{data:e,error:r}=await s.auth.admin.createUser({email:t.email,password:t.password,email_confirm:!0});if(r)throw r;const{data:a,error:o}=await s.from("profiles").insert({id:e.user.id,first_name:t.first_name,last_name:t.last_name,username:t.username,mobile_number:t.mobile_number||null,bio:t.bio||null,profile_visibility:!0}).select().single();if(o)throw await s.auth.admin.deleteUser(e.user.id),o;return{data:{...a,email:t.email},error:null}}catch(e){return console.error("Error creating user:",e),{data:null,error:e}}}static async deleteUser(t){try{const{error:e}=await s.from("profiles").update({is_active:!1,updated_at:new Date().toISOString()}).eq("id",t);if(e)throw e;const{error:r}=await s.auth.admin.updateUserById(t,{ban_duration:"none",user_metadata:{is_deleted:!0,deleted_at:new Date().toISOString()}});return r&&console.warn("Failed to disable auth user, but profile was marked inactive:",r),{error:null}}catch(e){return console.error("Error deleting user:",e),{error:e}}}static async resetUserPassword(t,e){try{const{data:r,error:a}=await s.auth.admin.updateUserById(t,{password:e});if(a)throw a;return{data:r,error:null}}catch(r){return console.error("Error resetting user password:",r),{data:null,error:r}}}static async getPets(t=1,e=10,r="",a=""){try{let o=s.from("pets").select("*",{count:"exact",head:!0});r&&(o=o.or(`name.ilike.%${r}%,type.ilike.%${r}%`)),a&&(o=o.eq("type",a));const{count:n}=await o;let i=s.from("pets").select(`
          *,
          owner:profiles(id, username, first_name, last_name)
        `).order("created_at",{ascending:!1});r&&(i=i.or(`name.ilike.%${r}%,type.ilike.%${r}%`)),a&&(i=i.eq("type",a));const{data:c,error:l}=await i.range((t-1)*e,t*e-1);if(l)throw l;return{data:c,error:null,count:n}}catch(o){return console.error("Error fetching pets:",o),{data:null,error:o,count:0}}}static async getPetById(t){try{const{data:e,error:r}=await s.from("pets").select(`
          *,
          owner:profiles(id, username, first_name, last_name, mobile_number)
        `).eq("id",t).eq("is_active",!0).single();if(r)throw r;return{data:e,error:null}}catch(e){return console.error("Error fetching pet:",e),{data:null,error:e}}}static async createPet(t){try{if(!t.name||!t.user_id)throw new Error("Pet name and user_id are required");const e={name:t.name,type:t.type||null,gender:t.gender||null,user_id:t.user_id,is_active:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{data:r,error:a}=await y.from("pets").insert(e).select(`
          *,
          owner:profiles(id, username, first_name, last_name)
        `).single();if(a)throw a;return{data:r,error:null}}catch(e){return console.error("Error creating pet:",e),{data:null,error:e}}}static async updatePet(t,e){try{const{data:r,error:a}=await y.from("pets").update({...e,updated_at:new Date().toISOString()}).eq("id",t).select(`
          *,
          owner:profiles(id, username, first_name, last_name)
        `).single();if(a)throw a;return{data:r,error:null}}catch(r){return console.error("Error updating pet:",r),{data:null,error:r}}}static async deletePet(t){try{const{error:e}=await y.from("pets").update({is_active:!1,updated_at:new Date().toISOString()}).eq("id",t);if(e)throw e;return{error:null}}catch(e){return console.error("Error deleting pet:",e),{error:e}}}static async getAppointments(t=1,e=10,r="",a="",o=""){try{console.log("API: Fetching appointments with params:",{page:t,limit:e,status:r,date:a,search:o});let n=s.from("appointments").select(`
          *,
          pets!inner(name, type),
          profiles!inner(username, first_name, last_name)
        `,{count:"exact"}).order("appointment_date",{ascending:!1}).order("appointment_time",{ascending:!0});r&&(n=n.eq("status",r)),a&&(n=n.eq("appointment_date",a)),o&&(n=n.ilike("status",`%${o}%`));const{data:i,error:c,count:l}=await n.range((t-1)*e,t*e-1);if(console.log("API: Raw appointment data:",{data:i,error:c,count:l}),c)throw console.error("API: Supabase error:",c),c;const d=(i==null?void 0:i.map(u=>({...u,pet:u.pets,user:u.profiles})))||[];return console.log("API: Transformed appointment data:",d),{data:d,error:null,count:l}}catch(n){return console.error("Error fetching appointments:",n),{data:null,error:n,count:0}}}static async createAppointment(t){try{console.log("API: Creating appointment with data:",t);const{data:e,error:r}=await s.from("appointments").insert({pet_id:t.pet_id,user_id:t.user_id,appointment_date:t.appointment_date,appointment_time:t.appointment_time,day_slot_id:t.day_slot_id,status:t.status,created_at:new Date().toISOString()}).select().single();if(console.log("API: Create appointment result:",{data:e,error:r}),r)throw r;return{data:e,error:null}}catch(e){return console.error("Error creating appointment:",e),{data:null,error:e}}}static async updateAppointmentStatus(t,e){try{console.log("API: Updating appointment status:",{id:t,status:e});const{data:r,error:a}=await s.from("appointments").update({status:e,updated_at:new Date().toISOString()}).eq("id",t).select().single();if(console.log("API: Update appointment result:",{data:r,error:a}),a)throw a;return{data:r,error:null}}catch(r){return console.error("Error updating appointment:",r),{data:null,error:r}}}static async getDaySlots(t){try{let e=s.from("day_slots").select("*").eq("is_active",!0).order("time_slot",{ascending:!0});t&&(e=e.eq("day_of_week",t));const{data:r,error:a}=await e;if(a)throw a;return{data:r,error:null}}catch(e){return console.error("Error fetching day slots:",e),{data:null,error:e}}}static async getAvailableTimeSlots(t){try{const r=new Date(t).toLocaleDateString("en-US",{weekday:"long"}),a=await this.getDaySlots(r);if(a.error||!a.data)throw a.error||new Error("No slots found");const{data:o,error:n}=await s.from("appointments").select("day_slot_id").eq("appointment_date",t).not("status","eq","Cancelled");if(n)throw n;const i=(o==null?void 0:o.reduce((l,d)=>(d.day_slot_id&&(l[d.day_slot_id]=(l[d.day_slot_id]||0)+1),l),{}))||{};return{data:a.data.filter(l=>(i[l.id]||0)<l.max_capacity),error:null}}catch(e){return console.error("Error fetching available time slots:",e),{data:null,error:e}}}static async getProducts(t=1,e=10,r=""){try{let a=s.from("products");r&&(a=a.or(`title.ilike.%${r}%,description.ilike.%${r}%`));const{count:o}=await a.select("*",{count:"exact",head:!0}),{data:n,error:i}=await a.select(`
          *,
          images:product_images(*)
        `).order("created_at",{ascending:!1}).range((t-1)*e,t*e-1);if(i)throw i;return{data:n,error:null,count:o}}catch(a){return console.error("Error fetching products:",a),{data:null,error:a,count:0}}}static async createProduct(t){try{const{data:e,error:r}=await s.from("products").insert(t).select().single();if(r)throw r;return{data:e,error:null}}catch(e){return console.error("Error creating product:",e),{data:null,error:e}}}static async uploadProductImage(t,e,r){try{const a=`${t}/${r}`,{data:o,error:n}=await s.storage.from("product-images").upload(a,e,{upsert:!0});if(n)throw n;const{data:i}=s.storage.from("product-images").getPublicUrl(a);return{data:{...o,publicUrl:i.publicUrl},error:null}}catch(a){return console.error("Error uploading product image:",a),{data:null,error:a}}}static async saveProductImageRecord(t,e,r=!1){try{const{data:a,error:o}=await s.from("product_images").insert({product_id:t,image_url:e,is_thumbnail:r}).select().single();if(o)throw o;return{data:a,error:null}}catch(a){return console.error("Error saving product image record:",a),{data:null,error:a}}}static async deleteProductImage(t,e){try{const{error:r}=await s.storage.from("product-images").remove([e]);if(r)throw r;const{error:a}=await s.from("product_images").delete().eq("id",t);if(a)throw a;return{error:null}}catch(r){return console.error("Error deleting product image:",r),{error:r}}}static async createProductWithImages(t,e,r){try{const a=await this.createProduct(t);if(a.error)throw a.error;const o=a.data.id,n=[];if(e){const c=`thumbnail.${e.name.split(".").pop()}`,l=await this.uploadProductImage(o,e,c);if(l.error)throw l.error;n.push(this.saveProductImageRecord(o,l.data.publicUrl,!0))}for(let i=0;i<r.length;i++){const c=r[i],l=c.name.split(".").pop(),d=`product-${i+1}.${l}`,u=await this.uploadProductImage(o,c,d);if(u.error)throw u.error;n.push(this.saveProductImageRecord(o,u.data.publicUrl,!1))}return await Promise.all(n),{data:a.data,error:null}}catch(a){return console.error("Error creating product with images:",a),{data:null,error:a}}}static async updateProductWithImages(t,e,r,a,o){try{const n=await this.updateProduct(t,e);if(n.error)throw n.error;const i=[];if(r){const c=o.find(m=>m.is_thumbnail);if(c){const m=c.image_url.split("/").slice(-2).join("/");await this.deleteProductImage(c.id,m)}const d=`thumbnail.${r.name.split(".").pop()}`,u=await this.uploadProductImage(t,r,d);if(u.error)throw u.error;i.push(this.saveProductImageRecord(t,u.data.publicUrl,!0))}for(let c=0;c<a.length;c++){const l=a[c],d=l.name.split(".").pop(),u=`product-${Date.now()}-${c+1}.${d}`,m=await this.uploadProductImage(t,l,u);if(m.error)throw m.error;i.push(this.saveProductImageRecord(t,m.data.publicUrl,!1))}return await Promise.all(i),{data:n.data,error:null}}catch(n){return console.error("Error updating product with images:",n),{data:null,error:n}}}static async updateProduct(t,e){try{const{data:r,error:a}=await s.from("products").update(e).eq("id",t).select().single();if(a)throw a;return{data:r,error:null}}catch(r){return console.error("Error updating product:",r),{data:null,error:r}}}static async deleteProduct(t){try{const{error:e}=await s.from("products").delete().eq("id",t);if(e)throw e;return{error:null}}catch(e){return console.error("Error deleting product:",e),{error:e}}}static async getOrders(t=1,e=10,r=""){try{let a=s.from("orders").select(`
          *,
          user:profiles(username, first_name, last_name),
          items:order_items(
            *,
            product:products(title, price)
          )
        `).order("created_at",{ascending:!1});r&&(a=a.eq("status",r));const{data:o,error:n,count:i}=await a.range((t-1)*e,t*e-1);if(n)throw n;return{data:o,error:null,count:i}}catch(a){return console.error("Error fetching orders:",a),{data:null,error:a,count:0}}}static async updateOrderStatus(t,e,r=""){var a;try{const{data:o,error:n}=await s.from("orders").update({status:e}).eq("id",t).select().single();if(n)throw n;return await s.from("order_status_history").insert({order_id:t,status:e,notes:r,changed_by:(a=(await y.auth.getUser()).data.user)==null?void 0:a.id}),{data:o,error:null}}catch(o){return console.error("Error updating order status:",o),{data:null,error:o}}}static async getMessages(t=1,e=10){try{const{data:r,error:a,count:o}=await s.from("messages").select(`
          *,
          sender:sender_id(username, first_name, last_name),
          receiver:receiver_id(username, first_name, last_name)
        `).order("sent_at",{ascending:!1}).range((t-1)*e,t*e-1);if(a)throw a;return{data:r,error:null,count:o}}catch(r){return console.error("Error fetching messages:",r),{data:null,error:r,count:0}}}static async sendMessage(t,e){try{const{data:r}=await y.auth.getUser();if(!r.user)throw new Error("Not authenticated");const{data:a,error:o}=await s.from("messages").insert({sender_id:r.user.id,receiver_id:t,message:e}).select().single();if(o)throw o;return{data:a,error:null}}catch(r){return console.error("Error sending message:",r),{data:null,error:r}}}static async createNotification(t){try{const{data:e,error:r}=await s.from("notifications").insert(t).select().single();if(r)throw r;return{data:e,error:null}}catch(e){return console.error("Error creating notification:",e),{data:null,error:e}}}static async broadcastNotification(t,e,r="info"){try{const{data:a,error:o}=await s.from("profiles").select("id");if(o)throw o;const n=a.map(l=>({user_id:l.id,title:t,message:e,type:r,is_read:!1})),{data:i,error:c}=await s.from("notifications").insert(n).select();if(c)throw c;return{data:i,error:null}}catch(a){return console.error("Error broadcasting notification:",a),{data:null,error:a}}}static async getAnalytics(t="30d"){try{const e=parseInt(t.replace("d","")),r=new Date;r.setDate(r.getDate()-e);const{data:a,error:o}=await s.from("orders").select("total_amount, created_at").gte("created_at",r.toISOString()).not("status","eq","cancelled");if(o)throw o;const{data:n,error:i}=await s.from("profiles").select("created_at").gte("created_at",r.toISOString());if(i)throw i;return{data:{revenue:a,userGrowth:n},error:null}}catch(e){return console.error("Error fetching analytics:",e),{data:null,error:e}}}}export{te as A,s as a,K as c,ee as d,y as s};
//# sourceMappingURL=services-B6m35qR1.js.map
